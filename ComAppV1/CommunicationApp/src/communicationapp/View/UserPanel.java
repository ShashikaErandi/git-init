/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package communicationapp.View;

import communicationapp.Controller.ItemController;
import communicationapp.Model.ItemModel;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Shashi
 */
public class UserPanel extends javax.swing.JPanel {

    /**
     * Creates new form ItemPanel
     */
    public UserPanel() {
        initComponents();
        loadItemID();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        itemTP = new javax.swing.JTabbedPane();
        itemAddLP = new javax.swing.JLayeredPane();
        addPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        TF_ItemId = new javax.swing.JTextField();
        TF_ItemCat = new javax.swing.JTextField();
        TF_ItemName = new javax.swing.JTextField();
        TF_ItemUP = new javax.swing.JTextField();
        TF_ItemQnty = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        BTN_AddItem = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        addedItemTBL = new javax.swing.JTable();
        jLabel15 = new javax.swing.JLabel();
        TF_NIC = new javax.swing.JTextField();
        itemDelLP = new javax.swing.JLayeredPane();
        delUpdatePanel = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        TF_ItemCat_update = new javax.swing.JTextField();
        TF_ItemName_update = new javax.swing.JTextField();
        TF_ItemUP_update = new javax.swing.JTextField();
        TF_ItemQnty_update = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        BTN_AddItem1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        updatedItemTBL = new javax.swing.JTable();
        Cobmo_ItemID = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        TF_ItemNewStock_update = new javax.swing.JTextField();
        BTN_AddItem2 = new javax.swing.JButton();
        itemViewLP = new javax.swing.JLayeredPane();
        delUpdatePanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        viewItemTBL = new javax.swing.JTable();
        BTN_ItemView_Refresh = new javax.swing.JButton();
        BTN_ItemView_Reload = new javax.swing.JButton();

        jTextField1.setText("jTextField1");

        setLayout(null);
        add(jLabel1);
        jLabel1.setBounds(1152, 0, 0, 570);

        jPanel3.setBackground(new java.awt.Color(0, 102, 102));
        jPanel3.setForeground(new java.awt.Color(0, 102, 102));
        jPanel3.setToolTipText("");
        jPanel3.setLayout(null);

        itemTP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        addPanel.setLayout(null);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Add User");
        addPanel.add(jLabel2);
        jLabel2.setBounds(120, 10, 142, 32);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Full Name");
        addPanel.add(jLabel3);
        jLabel3.setBounds(30, 80, 62, 22);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Telephone");
        addPanel.add(jLabel4);
        jLabel4.setBounds(30, 110, 80, 22);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("E-mail");
        addPanel.add(jLabel5);
        jLabel5.setBounds(30, 140, 69, 22);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("DOB");
        addPanel.add(jLabel6);
        jLabel6.setBounds(30, 170, 75, 22);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Gender");
        addPanel.add(jLabel7);
        jLabel7.setBounds(30, 200, 67, 22);

        TF_ItemId.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        TF_ItemId.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        TF_ItemId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF_ItemIdActionPerformed(evt);
            }
        });
        TF_ItemId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TF_ItemIdKeyPressed(evt);
            }
        });
        addPanel.add(TF_ItemId);
        TF_ItemId.setBounds(130, 80, 180, 24);

        TF_ItemCat.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        TF_ItemCat.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        TF_ItemCat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TF_ItemCatKeyPressed(evt);
            }
        });
        addPanel.add(TF_ItemCat);
        TF_ItemCat.setBounds(130, 140, 179, 24);

        TF_ItemName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        TF_ItemName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        TF_ItemName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF_ItemNameActionPerformed(evt);
            }
        });
        TF_ItemName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TF_ItemNameKeyPressed(evt);
            }
        });
        addPanel.add(TF_ItemName);
        TF_ItemName.setBounds(130, 110, 180, 24);

        TF_ItemUP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        TF_ItemUP.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        TF_ItemUP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TF_ItemUPKeyPressed(evt);
            }
        });
        addPanel.add(TF_ItemUP);
        TF_ItemUP.setBounds(130, 170, 179, 24);

        TF_ItemQnty.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        TF_ItemQnty.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        addPanel.add(TF_ItemQnty);
        TF_ItemQnty.setBounds(130, 200, 178, 24);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        addPanel.add(jSeparator1);
        jSeparator1.setBounds(330, 10, 20, 330);

        BTN_AddItem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        BTN_AddItem.setText("Add");
        BTN_AddItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_AddItemActionPerformed(evt);
            }
        });
        addPanel.add(BTN_AddItem);
        BTN_AddItem.setBounds(130, 320, 90, 30);

        addedItemTBL.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        addedItemTBL.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item ID", "Item Name", "Catagary", "Unit Price", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(addedItemTBL);

        addPanel.add(jScrollPane1);
        jScrollPane1.setBounds(360, 20, 520, 310);

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("NIC");
        addPanel.add(jLabel15);
        jLabel15.setBounds(30, 50, 62, 22);

        TF_NIC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        TF_NIC.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        TF_NIC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF_NICActionPerformed(evt);
            }
        });
        TF_NIC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TF_NICKeyPressed(evt);
            }
        });
        addPanel.add(TF_NIC);
        TF_NIC.setBounds(130, 50, 180, 24);

        itemAddLP.add(addPanel);
        addPanel.setBounds(0, 0, 900, 360);

        itemTP.addTab("Add", itemAddLP);

        itemDelLP.setBackground(new java.awt.Color(153, 204, 255));

        delUpdatePanel.setLayout(null);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Update Item");
        delUpdatePanel.add(jLabel8);
        jLabel8.setBounds(120, 20, 142, 32);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Item ID");
        delUpdatePanel.add(jLabel9);
        jLabel9.setBounds(30, 80, 46, 17);

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Item Name");
        delUpdatePanel.add(jLabel10);
        jLabel10.setBounds(30, 120, 67, 17);

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Catagary");
        delUpdatePanel.add(jLabel11);
        jLabel11.setBounds(30, 160, 56, 17);

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Unit Price");
        delUpdatePanel.add(jLabel12);
        jLabel12.setBounds(30, 200, 57, 17);

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Quantity on Hand");
        delUpdatePanel.add(jLabel13);
        jLabel13.setBounds(30, 240, 150, 17);

        TF_ItemCat_update.setEditable(false);
        TF_ItemCat_update.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        TF_ItemCat_update.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        TF_ItemCat_update.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TF_ItemCat_updateKeyPressed(evt);
            }
        });
        delUpdatePanel.add(TF_ItemCat_update);
        TF_ItemCat_update.setBounds(150, 160, 179, 19);

        TF_ItemName_update.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        TF_ItemName_update.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        TF_ItemName_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF_ItemName_updateActionPerformed(evt);
            }
        });
        TF_ItemName_update.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TF_ItemName_updateKeyPressed(evt);
            }
        });
        delUpdatePanel.add(TF_ItemName_update);
        TF_ItemName_update.setBounds(150, 120, 178, 19);

        TF_ItemUP_update.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        TF_ItemUP_update.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        TF_ItemUP_update.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TF_ItemUP_updateKeyPressed(evt);
            }
        });
        delUpdatePanel.add(TF_ItemUP_update);
        TF_ItemUP_update.setBounds(150, 200, 179, 19);

        TF_ItemQnty_update.setEditable(false);
        TF_ItemQnty_update.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        TF_ItemQnty_update.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        delUpdatePanel.add(TF_ItemQnty_update);
        TF_ItemQnty_update.setBounds(150, 240, 178, 19);

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        delUpdatePanel.add(jSeparator2);
        jSeparator2.setBounds(360, 20, 20, 320);

        BTN_AddItem1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        BTN_AddItem1.setText("Delete");
        BTN_AddItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_AddItem1ActionPerformed(evt);
            }
        });
        delUpdatePanel.add(BTN_AddItem1);
        BTN_AddItem1.setBounds(250, 310, 90, 30);

        updatedItemTBL.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        updatedItemTBL.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item ID", "Item Name", "Catagary", "Unit Price", "Total Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(updatedItemTBL);

        delUpdatePanel.add(jScrollPane2);
        jScrollPane2.setBounds(380, 20, 500, 310);

        Cobmo_ItemID.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Cobmo_ItemID.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                Cobmo_ItemIDItemStateChanged(evt);
            }
        });
        delUpdatePanel.add(Cobmo_ItemID);
        Cobmo_ItemID.setBounds(150, 80, 180, 20);

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("New Stock");
        delUpdatePanel.add(jLabel14);
        jLabel14.setBounds(30, 280, 150, 20);

        TF_ItemNewStock_update.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        TF_ItemNewStock_update.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        TF_ItemNewStock_update.setText("0");
        TF_ItemNewStock_update.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        delUpdatePanel.add(TF_ItemNewStock_update);
        TF_ItemNewStock_update.setBounds(150, 280, 178, 19);

        BTN_AddItem2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        BTN_AddItem2.setText("Update");
        BTN_AddItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_AddItem2ActionPerformed(evt);
            }
        });
        delUpdatePanel.add(BTN_AddItem2);
        BTN_AddItem2.setBounds(150, 310, 90, 30);

        itemDelLP.setLayer(delUpdatePanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout itemDelLPLayout = new javax.swing.GroupLayout(itemDelLP);
        itemDelLP.setLayout(itemDelLPLayout);
        itemDelLPLayout.setHorizontalGroup(
            itemDelLPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(itemDelLPLayout.createSequentialGroup()
                .addComponent(delUpdatePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 1110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        itemDelLPLayout.setVerticalGroup(
            itemDelLPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(delUpdatePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 359, Short.MAX_VALUE)
        );

        itemTP.addTab("Update/Delete", itemDelLP);

        delUpdatePanel1.setLayout(null);

        viewItemTBL.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        viewItemTBL.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item ID", "Item Name", "Catagary", "Unit Price", "Quantity on Hand"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(viewItemTBL);

        delUpdatePanel1.add(jScrollPane3);
        jScrollPane3.setBounds(10, 20, 870, 280);

        BTN_ItemView_Refresh.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        BTN_ItemView_Refresh.setText("Refresh");
        BTN_ItemView_Refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_ItemView_RefreshActionPerformed(evt);
            }
        });
        delUpdatePanel1.add(BTN_ItemView_Refresh);
        BTN_ItemView_Refresh.setBounds(790, 310, 90, 25);

        BTN_ItemView_Reload.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        BTN_ItemView_Reload.setText("Reload");
        BTN_ItemView_Reload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_ItemView_ReloadActionPerformed(evt);
            }
        });
        delUpdatePanel1.add(BTN_ItemView_Reload);
        BTN_ItemView_Reload.setBounds(700, 310, 80, 25);

        itemViewLP.setLayer(delUpdatePanel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout itemViewLPLayout = new javax.swing.GroupLayout(itemViewLP);
        itemViewLP.setLayout(itemViewLPLayout);
        itemViewLPLayout.setHorizontalGroup(
            itemViewLPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 895, Short.MAX_VALUE)
            .addGroup(itemViewLPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(delUpdatePanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 895, Short.MAX_VALUE))
        );
        itemViewLPLayout.setVerticalGroup(
            itemViewLPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 359, Short.MAX_VALUE)
            .addGroup(itemViewLPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(itemViewLPLayout.createSequentialGroup()
                    .addComponent(delUpdatePanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        itemTP.addTab("View List", itemViewLP);

        jPanel3.add(itemTP);
        itemTP.setBounds(10, 10, 900, 390);

        add(jPanel3);
        jPanel3.setBounds(0, 0, 1180, 420);
    }// </editor-fold>//GEN-END:initComponents

    private void BTN_AddItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_AddItemActionPerformed
        if (TF_ItemId.getText().equals(null) || TF_ItemId.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please fill the Book ID");
            TF_ItemId.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 51), 1));
            TF_ItemId.grabFocus();

        } else if (TF_ItemName.getText().equals(null) || TF_ItemName.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please fill the Book Title");
            TF_ItemName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 51), 1));
            TF_ItemName.grabFocus();

        } else if (TF_ItemCat.getText().equals(null) || TF_ItemCat.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please fill the ISBN");
            TF_ItemCat.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 51), 1));
            TF_ItemCat.grabFocus();

        } else if (TF_ItemUP.getText().equals(null) || TF_ItemUP.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please fill the Edition");
            TF_ItemUP.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 51), 1));
            TF_ItemUP.grabFocus();

        } else if (TF_ItemQnty.getText().equals(null) || TF_ItemQnty.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please fill the Auther ID");
            TF_ItemQnty.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 51), 1));
            TF_ItemQnty.grabFocus();

        } else {
            TF_ItemId.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 1));
            TF_ItemName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 1));
            TF_ItemCat.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 1));
            TF_ItemUP.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 1));
            TF_ItemQnty.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 1));
            showItemTbl();
            addAction();

        }
    }//GEN-LAST:event_BTN_AddItemActionPerformed

    private void TF_ItemUPKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TF_ItemUPKeyPressed
        if (evt.getKeyCode() == 10) {
            if (TF_ItemUP.getText().equals(null) || TF_ItemUP.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Enter User Name");
            } else {
                TF_ItemQnty.grabFocus();
            }

        }
    }//GEN-LAST:event_TF_ItemUPKeyPressed

    private void TF_ItemNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TF_ItemNameKeyPressed
        if (evt.getKeyCode() == 10) {
            if (TF_ItemName.getText().equals(null) || TF_ItemName.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Enter User Name");
            } else {
                TF_ItemCat.grabFocus();
            }

        }
    }//GEN-LAST:event_TF_ItemNameKeyPressed

    private void TF_ItemNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF_ItemNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF_ItemNameActionPerformed

    private void TF_ItemCatKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TF_ItemCatKeyPressed
        if (evt.getKeyCode() == 10) {
            if (TF_ItemCat.getText().equals(null) || TF_ItemCat.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Enter User Name");
            } else {
                TF_ItemUP.grabFocus();
            }

        }
    }//GEN-LAST:event_TF_ItemCatKeyPressed

    private void TF_ItemIdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TF_ItemIdKeyPressed
        if (evt.getKeyCode() == 10) {
            if (TF_ItemId.getText().equals(null) || TF_ItemId.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Enter User Name");
            } else {
                TF_ItemName.grabFocus();
            }

        }
    }//GEN-LAST:event_TF_ItemIdKeyPressed

    private void TF_ItemIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF_ItemIdActionPerformed

    }//GEN-LAST:event_TF_ItemIdActionPerformed

    private void TF_ItemCat_updateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TF_ItemCat_updateKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF_ItemCat_updateKeyPressed

    private void TF_ItemName_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF_ItemName_updateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF_ItemName_updateActionPerformed

    private void TF_ItemName_updateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TF_ItemName_updateKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF_ItemName_updateKeyPressed

    private void TF_ItemUP_updateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TF_ItemUP_updateKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF_ItemUP_updateKeyPressed

    private void BTN_AddItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_AddItem1ActionPerformed
        int i = JOptionPane.showConfirmDialog(this, "Are you sure?");
        System.out.println(i);
        if (i == 0) {
            String itemID = (String) Cobmo_ItemID.getSelectedItem();
            ItemModel item = new ItemModel(itemID);

            try {
                ItemModel itm = ItemController.storeItem(item);
                String itemid = itm.getItemID();
                String itemName = itm.getItemName();
                String cat = itm.getCat();
                double up = itm.getUp();
                int qnty = itm.getQnty();

                System.out.println(itemid);
                System.out.println(itemName);
                System.out.println(cat);

                BufferedWriter bw = new BufferedWriter(new FileWriter("DeletedItemLog.txt"));
                bw.write(itemid);
                bw.write(itemName);
                bw.write(cat);
                //bw.write(up);
                bw.write(qnty);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(UserPanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(UserPanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(UserPanel.class.getName()).log(Level.SEVERE, null, ex);
            }

//            try {
//
//                int res = ItemController.deleteItem(item);
//                if (res > 0) {
//                    JOptionPane.showMessageDialog(this, "Delete Success");
//                    updateClear();
//                } else {
//                    JOptionPane.showMessageDialog(this, "Delete Fail");
//                    updateClear();
//                }
//            } catch (ClassNotFoundException ex) {
//                Logger.getLogger(ItemPanel.class.getName()).log(Level.SEVERE, null, ex);
//            } catch (SQLException ex) {
//                Logger.getLogger(ItemPanel.class.getName()).log(Level.SEVERE, null, ex);
//            }

//            try {
//
//                int res = ItemController.deleteItem(item);
//                if (res > 0) {
//                    JOptionPane.showMessageDialog(this, "Delete Success");
//                    updateClear();
//                } else {
//                    JOptionPane.showMessageDialog(this, "Delete Fail");
//                    updateClear();
//                }
//            } catch (ClassNotFoundException ex) {
//                Logger.getLogger(ItemPanel.class.getName()).log(Level.SEVERE, null, ex);
//            } catch (SQLException ex) {
//                Logger.getLogger(ItemPanel.class.getName()).log(Level.SEVERE, null, ex);
//            }
        }

    }//GEN-LAST:event_BTN_AddItem1ActionPerformed

    private void Cobmo_ItemIDItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_Cobmo_ItemIDItemStateChanged
        String id = (String) Cobmo_ItemID.getSelectedItem();
        try {
            ItemModel item = ItemController.getItemCodes(id);
            TF_ItemName_update.setText("" + item.getItemName());
            TF_ItemCat_update.setText("" + item.getCat());
            TF_ItemUP_update.setText("" + item.getUp());
            TF_ItemQnty_update.setText("" + item.getQnty());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(UserPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(UserPanel.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_Cobmo_ItemIDItemStateChanged

    private void BTN_AddItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_AddItem2ActionPerformed
        if (TF_ItemName_update.getText().equals(null) || TF_ItemName_update.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please fill the Book ID");
            TF_ItemName_update.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 51), 1));
            TF_ItemUP_update.grabFocus();

        } else if (TF_ItemUP_update.getText().equals(null) || TF_ItemUP_update.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please fill the Book Title");
            TF_ItemUP_update.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 51), 1));
            TF_ItemNewStock_update.grabFocus();

        } else if (TF_ItemNewStock_update.getText().equals(null) || TF_ItemNewStock_update.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please fill the Book Title");
            TF_ItemNewStock_update.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 51), 1));

        } else {
            TF_ItemName_update.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 1));
            TF_ItemUP_update.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 1));
            TF_ItemNewStock_update.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 1));
            showUpdatedItemTbl();
            updateAction();
            updateClear();

        }
    }//GEN-LAST:event_BTN_AddItem2ActionPerformed

    private void BTN_ItemView_ReloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_ItemView_ReloadActionPerformed
        try {
            ArrayList<ItemModel> itemList = ItemController.getItem();
            DefaultTableModel dtm = (DefaultTableModel) viewItemTBL.getModel();
            dtm.setRowCount(0);
            for (ItemModel item : itemList) {
                Object[] rowData = {item.getItemID(), item.getItemName(), item.getCat(), item.getUp(), item.getQnty()};
                dtm.addRow(rowData);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(UserPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(UserPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BTN_ItemView_ReloadActionPerformed

    private void BTN_ItemView_RefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_ItemView_RefreshActionPerformed
        DefaultTableModel dm = (DefaultTableModel) viewItemTBL.getModel();
        dm.getDataVector().removeAllElements();
        dm.fireTableDataChanged();
    }//GEN-LAST:event_BTN_ItemView_RefreshActionPerformed

    private void TF_NICActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF_NICActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF_NICActionPerformed

    private void TF_NICKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TF_NICKeyPressed
        if (evt.getKeyCode()==10) { 
             String idFormst = "^[0-9]{9}[vVxX]$";
        if (!"".equals(TF_NIC.getText())) {
            if(TF_NIC.getText().matches(idFormst)){
              LBL_ErrorNIC.setText("");
              DOB nic = new DOB();
              nic.getid(TF_NIC.getText());
              if ("Male".equals(nic.getSex())) {
                    Combo_Male.setSelected(true);
              }if ("Female".equals(nic.getSex())) {
                    Combo_Female.setSelected(true);
                }
                   
                    String dateValue = nic.getday();
                    java.util.Date date = null;
                try {
                    date = new SimpleDateFormat("yyyy-MM-dd").parse(dateValue);
                } catch (ParseException ex) {
                    Logger.getLogger(User.class.getName()).log(Level.SEVERE, null, ex);
                }
                DC_dob.setDate(date);

              TXT_fName.grabFocus();
            }else{
                 LBL_ErrorNIC.setText("*  Invalid Format");
                 TF_NIC.setText("");
            }
        }
        else{
            LBL_ErrorNIC.setText("*  Enter NIC Number");
            BTNGrop_Gender.clearSelection();
        }   
            
        }      
    }//GEN-LAST:event_TF_NICKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTN_AddItem;
    private javax.swing.JButton BTN_AddItem1;
    private javax.swing.JButton BTN_AddItem2;
    private javax.swing.JButton BTN_ItemView_Refresh;
    private javax.swing.JButton BTN_ItemView_Reload;
    private javax.swing.JComboBox<String> Cobmo_ItemID;
    private javax.swing.JTextField TF_ItemCat;
    private javax.swing.JTextField TF_ItemCat_update;
    private javax.swing.JTextField TF_ItemId;
    private javax.swing.JTextField TF_ItemName;
    private javax.swing.JTextField TF_ItemName_update;
    private javax.swing.JTextField TF_ItemNewStock_update;
    private javax.swing.JTextField TF_ItemQnty;
    private javax.swing.JTextField TF_ItemQnty_update;
    private javax.swing.JTextField TF_ItemUP;
    private javax.swing.JTextField TF_ItemUP_update;
    private javax.swing.JTextField TF_NIC;
    private javax.swing.JPanel addPanel;
    private javax.swing.JTable addedItemTBL;
    private javax.swing.JPanel delUpdatePanel;
    private javax.swing.JPanel delUpdatePanel1;
    private javax.swing.JLayeredPane itemAddLP;
    private javax.swing.JLayeredPane itemDelLP;
    private javax.swing.JTabbedPane itemTP;
    private javax.swing.JLayeredPane itemViewLP;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable updatedItemTBL;
    private javax.swing.JTable viewItemTBL;
    // End of variables declaration//GEN-END:variables

    private void addAction() {
        String itemID = TF_ItemId.getText();
        String itemName = TF_ItemName.getText();
        String cat = TF_ItemCat.getText();
        double up = Double.parseDouble(TF_ItemUP.getText());
        int qnty = Integer.parseInt(TF_ItemQnty.getText());

        ItemModel item = new ItemModel(itemID, itemName, cat, up, qnty);
        try {
            int res = ItemController.addItem(item);
            if (res > 0) {
                JOptionPane.showMessageDialog(this, "Added Success");
                addItemClear();
            } else {
                JOptionPane.showMessageDialog(this, "Added Fail");
                addItemClear();
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(UserPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(UserPanel.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void addItemClear() {
        TF_ItemId.setText("");
        TF_ItemName.setText("");
        TF_ItemCat.setText("");
        TF_ItemUP.setText("");
        TF_ItemQnty.setText("");
    }

    private void showItemTbl() {
        String itemID = TF_ItemId.getText();
        String itemName = TF_ItemName.getText();
        String cat = TF_ItemCat.getText();
        String up = TF_ItemUP.getText();
        String qnty = TF_ItemQnty.getText();

        DefaultTableModel dtm = (DefaultTableModel) addedItemTBL.getModel();
        Object[] rowData = {itemID, itemName, cat, up, qnty};
        dtm.addRow(rowData);
    }

    private void showUpdatedItemTbl() {
        String itemID = (String) Cobmo_ItemID.getSelectedItem();
        String itemName = TF_ItemName_update.getText();
        String cat = TF_ItemCat_update.getText();
        double up = Double.parseDouble(TF_ItemUP_update.getText());
        int qnty = Integer.parseInt(TF_ItemQnty_update.getText());
        int newQnty = Integer.parseInt(TF_ItemNewStock_update.getText());
        int totalQnty = qnty + newQnty;

        DefaultTableModel dtm = (DefaultTableModel) updatedItemTBL.getModel();
        Object[] rowData = {itemID, itemName, cat, up, totalQnty};
        dtm.addRow(rowData);
    }

    private void loadItemID() {
        try {
            ArrayList<String> itamIDs = ItemController.getItemIDs();
            for (String itemID : itamIDs) {
                Cobmo_ItemID.addItem(itemID);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(UserPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(UserPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void updateAction() {
        String itemID = (String) Cobmo_ItemID.getSelectedItem();
        String itemName = TF_ItemName_update.getText();
        String cat = TF_ItemCat_update.getText();
        double up = Double.parseDouble(TF_ItemUP_update.getText());
        int qnty = Integer.parseInt(TF_ItemQnty_update.getText());
        int newQnty = Integer.parseInt(TF_ItemNewStock_update.getText());
        int totalQnty = qnty + newQnty;

        ItemModel item = new ItemModel(itemID, itemName, cat, up, totalQnty);
        try {
            int res = ItemController.updateItem(item);
            if (res > 0) {
                JOptionPane.showMessageDialog(this, "Update Success");
                addItemClear();
            } else {
                JOptionPane.showMessageDialog(this, "Update Fail");
                addItemClear();
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(UserPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(UserPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void updateClear() {
        TF_ItemName_update.setText("");
        TF_ItemCat_update.setText("");
        TF_ItemUP_update.setText("");
        TF_ItemQnty_update.setText("");
        TF_ItemNewStock_update.setText("0");
    }
}
